{"version":3,"sources":["app/containers/fruits/Fruits.tsx","app/services/fruits.ts","environment.ts","app/components/preview/Preview.tsx","app/components/card/Card.tsx"],"names":["FruitsContainer","useState","fruitsData","setFruitsData","useEffect","a","async","fetch","environment","fruitListURL","res","json","console","error","getFruitsList","then","data","Grid","className","map","fruit","Card","key","Id","animalListURL","Preview","loading","setLoading","Box","animation","direction","Loader","Image","fit","src","ImageURLs","FullSize","a11yTitle","Title","onLoad","pad","background","Heading","level","margin","vertical","color","Family","CollectiveNoun","Genus","Paragraph","Description","show","setShow","elevation","round","onClick","height","width","Thumb","left","Layer","onEsc","onClickOutside"],"mappings":"uMAmBeA,UAbS,WAAO,IAAD,EACQC,qBADR,mBACrBC,EADqB,KACTC,EADS,KAM5B,OAJAC,qBAAU,YCNU,4BAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAGAE,MAAMC,IAAYC,eAHlB,cAGZC,EAHY,kBAAAL,EAAA,MAICK,EAAIC,QAJL,OAIlBT,EAJkB,uDAMlBU,QAAQC,MAAM,uBAAd,MANkB,iCAQbX,GARa,yDDOlBY,GAAgBC,MAAK,SAAAC,GAAI,OAAIb,EAAca,QAC1C,IAGD,kBAACC,EAAA,EAAD,CAAMC,UAAU,kBACbhB,GAAcA,EAAWiB,KAAI,SAACC,GAAD,OAAmB,kBAACC,EAAA,EAAD,CAAML,KAAMI,EAAOE,IAAKF,EAAMG,W,gCEdrF,kCAAO,IAAMf,EAAc,CACzBgB,cAAe,+DACff,aAAc,kE,4ICmDDgB,EAjDC,SAAC,GAAmB,IAAjBT,EAAgB,EAAhBA,KAAgB,EACHf,oBAAS,GADN,mBAC1ByB,EAD0B,KACjBC,EADiB,KAEjC,OACE,kBAACC,EAAA,EAAD,CAAKC,UAAU,SAASC,UAAU,OAChC,kBAACF,EAAA,EAAD,KACGF,GAAW,kBAACK,EAAA,EAAD,MACZ,kBAACC,EAAA,EAAD,CACEC,IAAI,QACJC,IAAKlB,EAAKmB,UAAUC,SACpBC,UAAWrB,EAAKsB,MAChBC,OAAQ,kBAAMZ,GAAW,OAG7B,kBAACC,EAAA,EAAD,CAAKY,IAAI,QAAQC,WAAW,aAC1B,kBAACb,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAASC,MAAO,EAAGC,OAAQ,CAAEC,SAAU,SAAWC,MAAM,cACrD9B,EAAKsB,QAGV,kBAACV,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAASC,MAAO,EAAGC,OAAQ,CAAEC,SAAU,UAAYC,MAAM,kBACvD,4CACC9B,EAAK+B,SAGT/B,EAAKgC,gBACJ,kBAACpB,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAASC,MAAO,EAAGC,OAAQ,CAAEC,SAAU,UAAYC,MAAM,kBACvD,qDACC9B,EAAKgC,iBAIXhC,EAAKiC,OACJ,kBAACrB,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAASC,MAAO,EAAGC,OAAQ,CAAEC,SAAU,UAAYC,MAAM,kBACvD,2CACC9B,EAAKiC,QAIZ,kBAACrB,EAAA,EAAD,KACE,kBAACsB,EAAA,EAAD,CAAWJ,MAAM,kBAAkB9B,EAAKmC,iBCJnC9B,IArCF,SAAC,GAAmB,IAAjBL,EAAgB,EAAhBA,KAAgB,EACNf,oBAAS,GADH,mBACvBmD,EADuB,KACjBC,EADiB,KAG9B,OACE,oCACE,kBAACzB,EAAA,EAAD,CACEV,UAAU,iBACVuB,WAAW,UACXa,UAAU,SACVd,IAAI,QACJe,OAAK,EACL1B,UAAU,SACV2B,QAAS,kBAAMH,GAAQ,KAEvB,kBAACzB,EAAA,EAAD,CAAKV,UAAU,YAAYY,UAAU,kBACnC,kBAACF,EAAA,EAAD,CAAKV,UAAU,QAAQuC,OAAO,SAASC,MAAM,UAC3C,kBAAC1B,EAAA,EAAD,CAAOC,IAAI,QAAQC,IAAKlB,EAAKmB,UAAUwB,MAAOtB,UAAWrB,EAAKsB,SAEhE,kBAACV,EAAA,EAAD,CAAKV,UAAU,QAAQ0B,OAAQ,CAAEgB,KAAM,UACrC,kBAAClB,EAAA,EAAD,CAASC,MAAO,GAAI3B,EAAKsB,SAG7B,kBAACV,EAAA,EAAD,CAAKV,UAAU,aACb,kBAACU,EAAA,EAAD,CAAKV,UAAU,oBACb,kBAACgC,EAAA,EAAD,KAAYlC,EAAKmC,gBAItBC,GACC,kBAACS,EAAA,EAAD,CAAOC,MAAO,kBAAMT,GAAQ,IAAQU,eAAgB,kBAAMV,GAAQ,KAChE,kBAAC,EAAD,CAASrC,KAAMA","file":"static/js/5.fa9ce192.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { getFruitsList } from '../../services/fruits'\r\nimport { Grid } from 'grommet'\r\nimport Card from '../../components/card/Card'\r\nimport { FruitI } from '../../types'\r\n\r\nconst FruitsContainer = () => {\r\n  const [fruitsData, setFruitsData] = useState()\r\n  useEffect(() => {\r\n    getFruitsList().then(data => setFruitsData(data))\r\n  }, [])\r\n\r\n  return (\r\n    <Grid className=\"grid-container\">\r\n      {fruitsData && fruitsData.map((fruit: FruitI) => <Card data={fruit} key={fruit.Id} />)}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FruitsContainer\r\n","import { environment } from '../../environment'\r\n\r\nconst getFruitsList = async () => {\r\n  let fruitsData\r\n  try {\r\n    const res = await fetch(environment.fruitListURL)\r\n    fruitsData = await res.json()\r\n  } catch (err) {\r\n    console.error('Something went wrong', err)\r\n  }\r\n  return fruitsData\r\n}\r\n\r\nexport { getFruitsList }\r\n","export const environment = {\r\n  animalListURL: 'http://styleguide.effectivedigital.com/interview/api/animals',\r\n  fruitListURL: 'http://styleguide.effectivedigital.com/interview/api/fruitveg',\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box, Image, Heading, Paragraph } from 'grommet'\r\nimport Loader from '../loader/Loader'\r\n\r\nconst Preview = ({ data }: any) => {\r\n  const [loading, setLoading] = useState(true)\r\n  return (\r\n    <Box animation=\"zoomIn\" direction=\"row\">\r\n      <Box>\r\n        {loading && <Loader />}\r\n        <Image\r\n          fit=\"cover\"\r\n          src={data.ImageURLs.FullSize}\r\n          a11yTitle={data.Title}\r\n          onLoad={() => setLoading(false)}\r\n        ></Image>\r\n      </Box>\r\n      <Box pad=\"small\" background=\"milkGlass\">\r\n        <Box>\r\n          <Heading level={1} margin={{ vertical: 'small' }} color=\"marineBlue\">\r\n            {data.Title}\r\n          </Heading>\r\n        </Box>\r\n        <Box>\r\n          <Heading level={4} margin={{ vertical: 'xsmall' }} color=\"brightCerulean\">\r\n            <strong>Family: </strong>\r\n            {data.Family}\r\n          </Heading>\r\n        </Box>\r\n        {data.CollectiveNoun && (\r\n          <Box>\r\n            <Heading level={4} margin={{ vertical: 'xsmall' }} color=\"brightCerulean\">\r\n              <strong>Collective Noun: </strong>\r\n              {data.CollectiveNoun}\r\n            </Heading>\r\n          </Box>\r\n        )}\r\n        {data.Genus && (\r\n          <Box>\r\n            <Heading level={4} margin={{ vertical: 'xsmall' }} color=\"brightCerulean\">\r\n              <strong>Genus: </strong>\r\n              {data.Genus}\r\n            </Heading>\r\n          </Box>\r\n        )}\r\n        <Box>\r\n          <Paragraph color=\"brightCerulean\">{data.Description}</Paragraph>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Preview\r\n","import React, { useState } from 'react'\r\nimport { Box, Image, Heading, Layer, Paragraph } from 'grommet'\r\nimport './card.scss'\r\nimport Preview from '../preview/Preview'\r\n\r\nconst Card = ({ data }: any) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"card-container\"\r\n        background=\"light-1\"\r\n        elevation=\"medium\"\r\n        pad=\"small\"\r\n        round\r\n        animation=\"fadeIn\"\r\n        onClick={() => setShow(true)}\r\n      >\r\n        <Box className=\"card-head\" direction=\"row-responsive\">\r\n          <Box className=\"thumb\" height=\"xsmall\" width=\"xsmall\">\r\n            <Image fit=\"cover\" src={data.ImageURLs.Thumb} a11yTitle={data.Title}></Image>\r\n          </Box>\r\n          <Box className=\"title\" margin={{ left: 'small' }}>\r\n            <Heading level={3}>{data.Title}</Heading>\r\n          </Box>\r\n        </Box>\r\n        <Box className=\"card-body\">\r\n          <Box className=\"card-description\">\r\n            <Paragraph>{data.Description}</Paragraph>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {show && (\r\n        <Layer onEsc={() => setShow(false)} onClickOutside={() => setShow(false)}>\r\n          <Preview data={data}></Preview>\r\n        </Layer>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card\r\n"],"sourceRoot":""}